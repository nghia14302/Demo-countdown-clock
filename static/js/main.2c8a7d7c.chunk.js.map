{"version":3,"sources":["components/Clock/counterTimer/ProgressBar/ProgressBar.jsx","components/Clock/counterTimer/CounterTimer.jsx","components/LoadingScreen/LoadingScreen.jsx","components/Clock/SignUp/SignUpDialog/Input/Input.jsx","components/Clock/SignUp/SignUpDialog/SignUpDialog.jsx","components/Clock/SignUp/SignUp.jsx","components/Clock/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProgressBar","props","react_default","a","createElement","className","cx","cy","r","style","strokeDashoffset","percent","CounterTimer","lastDate","startDate","parseInt","Math","abs","currentDate","fullDate","counterTimer_ProgressBar_ProgressBar","unit","LoadingScreen","CircularProgress","color","Input","id","type","placeholder","required","onChange","eventOnChange","onSubmit","htmlFor","href","Fragment","validate","SignUpDialog","_useState","useState","_useState2","Object","slicedToArray","userEmail","setEmail","_useState3","_useState4","_useState5","_useState6","submitData","e","preventDefault","isValid","test","String","value","toLowerCase","validEmail","SignUpDialog_Input_Input","icon","target","onClick","SignUp","showDialog","setShowDialog","close","reach_dialog_esm","area-label","isOpen","onDismiss","SignUp_SignUpDialog_SignUpDialog","Clock","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","countDownTimer","days","hours","minutes","seconds","_this2","setTime","setInterval","countDown","clearInterval","setState","getTime","floor","toDateString","Clock_counterTimer_CounterTimer","Clock_SignUp_SignUp","components_LoadingScreen_LoadingScreen","React","Component","App","components_Clock_Clock","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c8a7d7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressBar = (props) => {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <svg>\r\n                <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\r\n                <circle cx=\"70\" cy=\"70\" r=\"70\" style={ {'strokeDashoffset': 440 - (440 * props.percent) / 100 } }> </circle>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport './CounterTimer.css';\r\nimport './CounterTimer.css';\r\nimport ProgressBar from './ProgressBar/ProgressBar.jsx';\r\nconst CounterTimer = (props) => {\r\n    let percent = 0;\r\n    if ((props.lastDate - props.startDate) !== 0){\r\n        percent = parseInt(Math.abs(props.currentDate) / Math.abs(props.fullDate) * 100 );\r\n    }\r\n    // console.log(props.fullDate);\r\n    // console.log(props.unit);\r\n    return ( \r\n        <div className=\"clock-counter\"> \r\n            <ProgressBar percent={percent} />\r\n            <div className=\"clock-timer\">\r\n                {props.currentDate}\r\n            </div>\r\n            <div className=\"clock-unit\">\r\n                {props.unit}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default CounterTimer;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport './LoadingScreen.css';\r\nconst LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading-screen\">\r\n            <h2>Loading...</h2>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingScreen;","import React from 'react';\r\nimport './Input.css'\r\nconst Input = (props) => {\r\n    return ( \r\n        <div className=\"input-form\">\r\n            <input \r\n                id={props.type} \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                required\r\n                onChange={props.eventOnChange}\r\n                onSubmit={props.eventOnChange}\r\n            ></input>\r\n            {props.type === 'checkbox' ?\r\n            <label htmlFor={props.type}>\r\n                I accept the <a href=\"#\">rule</a> in the club.\r\n            </label>\r\n            : <></>\r\n            }\r\n            <p className=\"alert-validate\">{props.validate}</p>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport Input from './Input/Input.jsx';\r\nimport './SignUpDialog.css';\r\nconst SignUpDialog = (props) => {\r\n    const [userEmail, setEmail] = useState({});\r\n    const [username, setUsername] = useState(\"\");\r\n    const [userPassword, setPassword] = useState(\"\");\r\n    \r\n    // Input form\r\n    const inputEmail = (e) =>{\r\n        setEmail(\r\n            {value: e.target.value, validate: ''}\r\n        );  \r\n        \r\n    };\r\n    // check valid \r\n    const validEmail = () => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let isValid = re.test(String(userEmail.value).toLowerCase());\r\n        if (userEmail.value === \"\"){\r\n            userEmail.validate = \"Please enter your email\";\r\n            return;\r\n        }\r\n        if (!isValid){\r\n            userEmail.validate = \"Please use the right form: abcd@xzy.com\";\r\n        };\r\n    }\r\n    const submitData = (e) => {\r\n        e.preventDefault();\r\n        validEmail(e);\r\n    };\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <div className=\"content-container\">\r\n                <div className=\"description\">\r\n                    <h2>Over 100 people joined.</h2>\r\n                    <h2>Waiting for you to make this more interesting.</h2>\r\n                    <p>How can you survive for this party? It's depend on you.</p>\r\n                </div>\r\n                <form className=\"input-form\" onSubmit={submitData}>\r\n                    <Input type=\"email\" placeholder=\"Your Email\" icon=\"ef12\" eventOnChange={inputEmail} validate={userEmail.validate}/>\r\n                    <Input type=\"User name\" placeholder=\"Your Username\" icon=\"\"/>\r\n                    <Input type=\"password\" placeholder=\"Your Password\" icon=\"\"/>\r\n                    <Input type=\"checkbox\" icon=\"\"/>\r\n                    <button className=\"submit-button\" onClick={submitData}  >Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpDialog;","import React, { useState } from 'react';\r\nimport { Dialog, DialogOverlay, DialogContent } from '@reach/dialog';\r\nimport '@reach/dialog/styles.css';\r\nimport './SignUp.css'; \r\nimport SignUpDialog from './SignUpDialog/SignUpDialog.jsx';\r\nconst SignUp = (props) => {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const open = () => setShowDialog(true);\r\n    const close = () => setShowDialog(false);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h4>Wanna Join in?</h4>\r\n            <button className=\"login-button\" onClick={open} >Sign up Now</button>  \r\n            <DialogOverlay area-label=\"Login-dialog\" isOpen={showDialog} onDismiss={close}>\r\n                <DialogContent className=\"dialog-container\" area-label=\"login-container\" >\r\n                    <SignUpDialog />\r\n                    <button className=\"back-button\">\r\n                        <i className=\"icofont-arrow-left\"></i>\r\n                        <div className=\"back-text\" onClick={close}>\r\n                            Back to the clock\r\n                        </div>\r\n                    </button>\r\n                </DialogContent>\r\n            </DialogOverlay>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport CounterTimer from './counterTimer/CounterTimer.jsx';\r\nimport './Clock.css';\r\nimport LoadingScreen from './../LoadingScreen/LoadingScreen.jsx';\r\nimport SignUp from './SignUp/SignUp.jsx';\r\n\r\nconst dayToMilisecond = 1000 * 60 * 60 * 24;\r\nconst minuteToMilisecond = 1000 * 60;\r\nconst hourToMilisecond = 1000 * 60 * 60;\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(2021, 5, 1, 0, 0, 0),\r\n            startDate: new Date(2021, 4, 16, 0, 0, 0),\r\n            countDownTimer: new Date(),\r\n            currentDate: new Date(),\r\n            fullDate: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            minutes: 0,\r\n            seconds: -1,\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setTime = setInterval(() => this.countDown(), 1000);\r\n    };\r\n    componentWillUnmount() {\r\n        clearInterval(this.setTime);\r\n    };\r\n    countDown() {\r\n        this.setState({\r\n            fullDate: (this.state.date.getTime() - this.state.startDate.getTime())/ dayToMilisecond,\r\n        });\r\n        if (this.state.date.getTime() - this.state.currentDate.getTime() >= 0){\r\n            this.setState({\r\n                countDownTimer: new Date(this.state.date.getTime() - this.state.currentDate.getTime()),\r\n                currentDate: new Date(),\r\n            });\r\n            this.setState({\r\n                days: Math.floor(this.state.countDownTimer.getTime()  / dayToMilisecond),\r\n                hours: Math.floor(this.state.countDownTimer.getTime() / hourToMilisecond % 24),\r\n                minutes: Math.floor(this.state.countDownTimer.getTime() / minuteToMilisecond %  60),\r\n                seconds: Math.floor(this.state.countDownTimer.getTime() / 1000 % 60)\r\n            });\r\n        } else {\r\n            this.setState({\r\n                days: 0,\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0,\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n        <> \r\n        { this.state.seconds !== -1 ? \r\n            <div className=\"countdown-timer\" >\r\n                <h2>Count Down To Event</h2>\r\n                <h4>Fcode Birthday will come in {this.state.date.toDateString()} </h4>\r\n                <div className=\"clock-container \" >\r\n                    <CounterTimer \r\n                        currentDate={this.state.days} \r\n                        fullDate={this.state.fullDate}\r\n                        unit=\"Days\" \r\n                    />\r\n                    <CounterTimer \r\n                        currentDate={this.state.hours} \r\n                        fullDate={24}\r\n                        unit=\"Hours\"\r\n                    />\r\n                    <CounterTimer \r\n                        currentDate={this.state.minutes} \r\n                        fullDate={60}\r\n                        unit=\"Minutes\" \r\n                    />\r\n                    <CounterTimer \r\n                        currentDate={this.state.seconds} \r\n                        fullDate={60}\r\n                        unit=\"Seconds\" \r\n                    />\r\n                </div>\r\n                <SignUp />\r\n            </div> \r\n        :   <LoadingScreen />    \r\n        }\r\n        </>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default Clock;","import React, { useState, useEffect, Suspense } from 'react';\r\nimport Clock from './components/Clock/Clock.jsx';\r\nimport './asset/font/icofont/icofont.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n      <Clock />\r\n  )\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}